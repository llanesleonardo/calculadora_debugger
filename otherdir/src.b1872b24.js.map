{"version":3,"sources":["index.js"],"names":["operations","document","querySelectorAll","numbers","equal","querySelector","reset","result","keys","operators","formulas","a","b","valuesCalc","isOperator","valueEvent","includes","checkLastItem","newArray","length","map","key","addEventListener","e","resultDiv","lastItemArray","EventArray","target","innerText","main","console","log","currentValueCalc","doTheCalc","operateProcess","concatValues","valuesCalculator","calculationValues","isAnOperator","findOperando","LastItemArray","concat","splice","valuesCalc1","calculateResult","findOperator","valuesCalc2","nextIndex","findIndex","value","valuesCalc3","index","resultFromFormulas","item","jindex","filter"],"mappings":"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","file":"src.b1872b24.js","sourceRoot":"..\\src","sourcesContent":["const operations = document.querySelectorAll('.operation')\r\nconst numbers = document.querySelectorAll('.number')\r\nconst equal = document.querySelector('.equal')\r\nconst reset = document.querySelector('.reset')\r\nconst result = document.querySelector('.result')\r\n\r\nexport const keys = [...operations, ...numbers, equal, reset, result]\r\n/* calculator in javascript using functional programming principles */\r\nexport const operators = ['+', '*', '-', '/']\r\n\r\nexport const formulas = {\r\n  '/': (a, b) => a / b,\r\n  '*': (a, b) => a * b,\r\n  '+': (a, b) => a + b,\r\n  '-': (a, b) => a - b\r\n}\r\n\r\nexport let valuesCalc = []\r\n\r\nexport const isOperator = valueEvent => operators.includes(valueEvent)\r\nexport const checkLastItem = newArray => isOperator(newArray[newArray.length - 1])\r\n\r\nkeys.map(key => {\r\n  key.addEventListener('click', e => {\r\n    let resultDiv = result\r\n    let EventArray = [e.target.innerText]\r\n    main(resultDiv, EventArray, valuesCalc)\r\n    let lastItemArray\r\n    console.log(valuesCalc)\r\n    if (EventArray[0] === '=') {\r\n      console.log(EventArray[0])\r\n      let currentValueCalc = resultDiv.innerText\r\n      let doTheCalc\r\n      doTheCalc = valuesCalc.length !== 0 ? operateProcess(valuesCalc) : currentValueCalc // envia el valor final de las operaciones al dar click en \"=\"\r\n      resultDiv.innerText = doTheCalc\r\n      valuesCalc = []\r\n    } else if (EventArray[0] === 'C') {\r\n      console.log(EventArray[0])\r\n      resultDiv.innerText = 0\r\n      valuesCalc = []\r\n    } else {\r\n      valuesCalc = concatValues(valuesCalc, EventArray[0])\r\n      lastItemArray = valuesCalc[valuesCalc.length - 1]\r\n      resultDiv.innerText =\r\n        isOperator(lastItemArray) === true ? valuesCalc[valuesCalc.length - 2] : lastItemArray\r\n    }\r\n    // main(resultDiv, EventArray, valuesCalc)\r\n  })\r\n})\r\n\r\nexport const main = (resultDiv, EventArray, valuesCalc) => {\r\n  console.log('resultDiv', resultDiv)\r\n  console.log('EventArray', EventArray)\r\n  console.log('valuesCalc', valuesCalc)\r\n}\r\n//TODO si le aplasto igual debe de saber si existe un operando\r\n\r\nexport const concatValues = (valuesCalculator, calculationValues) => {\r\n  const newArray = [...valuesCalculator]\r\n  let isAnOperator = isOperator(calculationValues)\r\n  if (newArray.length >= 1 && isAnOperator === false) {\r\n    // Si es numero\r\n    let findOperando = checkLastItem(newArray) //si este numero tiene un operador a la izquerda\r\n    let LastItemArray = newArray[newArray.length - 1]\r\n    let otherArray = [...newArray]\r\n\r\n    return findOperando === true\r\n      ? newArray.concat(calculationValues)\r\n      : (otherArray = [\r\n          ...newArray.splice(0, newArray.length - 1),\r\n          LastItemArray + calculationValues\r\n        ])\r\n  }\r\n  if (newArray.length >= 1 && isAnOperator) return newArray.concat(calculationValues) // si es operador\r\n  return isAnOperator === true ? newArray : newArray.concat(calculationValues)\r\n}\r\n\r\nexport const operateProcess = valuesCalc1 => {\r\n  if (valuesCalc1.length === 1) return valuesCalc1[0]\r\n  return operateProcess(calculateResult(valuesCalc1, findOperator(valuesCalc1)))\r\n}\r\n\r\nexport const findOperator = valuesCalc2 => {\r\n  // console.log('valuesCalc2', valuesCalc2)\r\n  const nextIndex = valuesCalc2.findIndex(value => value === '*' || value === '/')\r\n  return nextIndex !== -1\r\n    ? nextIndex\r\n    : valuesCalc2.findIndex(value => value === '-' || value === '+')\r\n}\r\n\r\nexport const calculateResult = (valuesCalc3, index) => {\r\n  if (index === -1) return valuesCalc3\r\n  const resultFromFormulas = formulas[valuesCalc3[index]](\r\n    +valuesCalc3[index - 1],\r\n    +valuesCalc3[index + 1]\r\n  )\r\n  return valuesCalc3\r\n    .map((item, jindex) => (index - 1 === jindex ? resultFromFormulas : item))\r\n    .filter((item, jindex) => jindex < index || jindex > index + 1)\r\n}\r\n"]}